
// #include : 헤더파일을 여기에 포함시키는 기능이다.
#include<iostream>

using namespace std;

// 실행 과정 : 컴파일 -> 빌드 -> 실행
// 컴파일 : 번역작업이다. 
// Ctrl + Shift + B 를 이용해서 컴파일 및 빌드를 할 수 있다.

// C++의 시작점은 main 함수이다. main 함수는 반드시 있어야 한다.
int main()
{
	// C++ 표준 기능의 대부분은 std라는 namespace 안에 존재하고 있다.
	// 이름이 겹치는 것을 방지하기 위해서이다.
	// cout : 콘솔창에 출력해주는 기능이다. 뒤에 있는 ""(큰따옴표) 안에 있는 문자들을 화면에 출력해준다.
	// 문자 여러개를 사용할 때는 반드시 "" 안에 넣어주고 이런 것을 문자열이라고 한다.
	// endl : 개행기능이다.
	std::cout << "Test Output" << std::endl;
	std::cout << "가나다라" << std::endl;

	cout << "using namespace std" << endl;

	/*
	변수 : 변하는 수. 값이 바뀔 수 있다.
	용량의 최고단위 : bit
	1 byte = 8 bit
	1 kbyte = 1024 byte
	1 mbyte = 1024 kbyte
	1 gbyte = 1024 mbyte
	1 tbyte = 1024 gbyte

	문자를 표현하는 방법 : ASCII 코드 표를 가지고 있다.
	종 류	|	용 량	|	데이터	|	 표현범위		|		unsigned	|
	char	|	1 byte	|	문자		|	-128 ~ 127	|	0 ~ 255			|
	bool	|	1 byte	|	참/거짓		|	true / false	|	true / false		|
	short	|	2 byte	|	정수		|	-32768 ~ 32767	|	0 ~ 65535		|
	int	|	4 byte	|	정수		|	약 -22억 ~ 21억	|	0 ~ 약 43억		|
	float	|	4 byte	|	실수		|	
	double	|	8 byte	|	실수		|	
	*/

	// = : 대입 연산자이다. 오른쪽에 있는 값을 왼쪽으로 대입한다.
	int Number = 10;
	Number = 20;

	cout << Number << endl;

	bool	bTest = true;
	bTest = false;

	cout << bTest << endl;

	// 영문이나 숫자는 1 byte를 차지한다. 하지만 한글이나 한문 등의 문자들을 2 byte를
	// 차지하기 때문에 char 변수 하나에 저장하기가 힘들다.
	char	cTest = 't';

	cout << cTest << endl;

	float	fNumber = 3.14f;

	cout << fNumber << endl;

	double dNumber = 123.4567;

	cout << dNumber << endl;

	/*
	사칙연산자 : +, -, *, /, %(나머지 연산자, mod 연산자)
	관계연산자 : 값대 값을 연산하여 참/거짓으로 결과를 반환한다.
	>, >=, <, <=, ==, !=

	논리연산자 : 참/거짓 대 참/거짓 연산하여 참/거짓으로 결과를 반환한다.
	AND(&&), OR(||), NOT(!)
	A	B	AND	OR
	0	0	0	0
	1	0	0	1
	0	1	0	1
	1	1	1	1

	A	NOT
	0	1
	1	0

	진수 : 2진수, 8진수, 10진수, 16진수
	2진수 : 0 ~ 1
	8진수 : 0 ~ 7
	10진수 : 0 ~ 9
	16진수 : 0 ~ 9, a(10) ~ f(15)
	진수들은 서로 다른 진수로 변환이 가능하다.
	87을 2진수, 16진수로 변환해보자.
	87/2=43	-- 1
	43/2=21	-- 1
	21/2=10	-- 1
	10/2=5	-- 0
	5/2=2	-- 1
	2/2=1	-- 0
	가장 마지막에 나온 몫부터 역숙으로 나머지값들을 읽는다.
	1010111(2)이 된다.

	16진수로 변환해보자. 10진수를 바로 16진수로 변환하는 것보다 2진수로 변환한 후에
	16진수로 변환하는 것이 쉽다.

	1010111 을 오른쪽으로부터 4자리씩 끊어서 계산한다. 16진수 1자리는 2진수 4자리이다.
	0101 0111
	8421 8421

	2진수가 1인 부분의 값들을 거한다.
	16진수 57이 된다.

	53/2=26	-- 1
	26/2=13	-- 0
	13/2=6	-- 1
	6/2=3	-- 0
	3/2=1	-- 1

	비트단위 논리연산자 : 2진수 단위의 연산을 한다. 값대 값을 연산하여 값으로 나온다.
	종류 : AND(&), OR(|), NOT(~), XOR(^)
	A	B	XOR
	0	0	0
	1	0	1
	0	1	1
	1	1	0


	87 & 53
	87 : 1010111
	53 :  110101

	먼저 위처럼 2진수로 바꾼 수에 2진수 각 자리별로 논리연산을 실행한다.
	 1010111
	&0110101
	 0010101
	 10101 이 나온다.
	10진수로 변환하면 21이 나오게 된다.
	*/

	cout << "10 < 20 = " << (10 < 20) << endl;
	cout << "10 <= 20 = " << (10 <= 20) << endl;
	cout << "10 > 20 = " << (10 > 20) << endl;
	cout << "10 >= 20 = " << (10 >= 20) << endl;
	cout << "10 == 20 = " << (10 == 20) << endl;
	cout << "10 != 20 = " << (10 != 20) << endl;

	cout << "숫자를 입력하세요 : ";
	cin >> Number;

	cout << "10 ~ 20 = " << (10 <= Number && Number <= 20) << endl;

	cout << "87 & 53 = " << (87 & 53) << endl;

	return 0;
}
